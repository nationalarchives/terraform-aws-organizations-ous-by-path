name: OU Terraform Plan
on:
  workflow_dispatch:
  push:
    paths:
      - "**/*.tf"
      - ".github/workflows/resource.yml"
    branches:
      - "**"

permissions:
  contents: read

jobs:
  terraform_validate:
    name: Terraform validate
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      checks: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Terraform setup
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: 1.12.1

      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Terraform format
        run: terraform fmt -check -recursive

      - name: Terraform init
        working-directory: ./examples/resource
        run: terraform init -get -backend=false

      - name: Terraform validate
        working-directory: ./examples/resource
        run: terraform validate
        
  secret_scan:
    name: Secret scan
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Install GitLeaks
        run: |
          wget https://github.com/gitleaks/gitleaks/releases/download/v8.16.1/gitleaks_8.16.1_linux_x64.tar.gz && \
          tar -xf gitleaks_8.16.1_linux_x64.tar.gz
          sudo mv gitleaks /usr/local/bin/gitleaks && \
          sudo chmod +x /usr/local/bin/gitleaks
      - name: Run GitLeaks Scan
        run: |
          gitleaks detect --source . -v

  terraform_plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    needs:
      - terraform_validate
      - secret_scan
    defaults:
      run:
        working-directory: ./examples/resource

    permissions:
      id-token: write
      contents: read
      pull-requests: read
      checks: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Terraform setup
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: 1.12.1

      - name: checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN}}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform initialise
        run: >
          terraform init
          -backend-config=bucket=${{ secrets.TERRAFORM_STATE_BUCKET}}
          -backend-config=key=${{ secrets.TERRAFORM_STATE_KEY}}
          -backend-config=region=${{ secrets.TERRAFORM_STATE_REGION}}

      - name: terraform plan
        run: terraform plan -out tfplan
